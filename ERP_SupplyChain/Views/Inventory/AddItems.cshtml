@model ERPEntities.Models.ItemsModel

@{
    ViewBag.Title = "Add Items";
    ViewBag.isActive = "active";
}
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<div class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-12 col-md-12">
                <div class="card">
                    <div class="card-header card-header-info card-header-icon">
                        <div class="card-icon">
                            <i class="material-icons">assignment</i>
                        </div>
                        <h4 class="card-title">Add Items</h4>
                    </div>
                    <div class="content">
                       
                            @using (Html.BeginForm("","",FormMethod.Post, new { method="post", action="/Inventory/Additems", id="MyForm"}))

                            { @Html.ValidationSummary(true)
                                @Html.AntiForgeryToken()

                                <div class="row">

                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label>@Html.LabelFor(model => model.VendorID)</label>
                                            @if (ViewBag.VendorList != null)
                                            {  
                                                @Html.DropDownListFor(model => model.VendorID, ViewBag.VendorList as SelectList, "--Select Vendor--", new { @class = " form-control border-input  ", name = "SelectVendor", id = "VendorId", style = "position : relative;" })   
                                            }
                                            @Html.ValidationMessageFor(model => model.VendorID)
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            @if (ViewBag.CategoryList != null)
                                            {
                                                <label>@Html.LabelFor(model => model.CategoryID)</label>
                                                 @Html.DropDownListFor(model => model.CategoryID, ViewBag.CategoryList as SelectList, "--Select Category--", new { @class = " form-control ", name = "SelectCategotry", id = "CategoryId" , style="position : relative;"})
                                                <div>@Html.ValidationMessageFor(model => model.CategoryID)</div>
                                            }   
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label>@Html.LabelFor(model => model.ItemName)</label>
                                            @Html.TextBoxFor(model => model.ItemName, new { @class = "form-control border-input", name = "ItemName" })
                                            <div>@Html.ValidationMessageFor(model => model.ItemName)</div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label>@Html.LabelFor(model => model.UnitPrice)</label>
                                            @Html.TextBoxFor(model => model.UnitPrice, new { @class = "form-control border-input", name = "UnitPrice" })
                                            <div>@Html.ValidationMessageFor(model => model.UnitPrice)</div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label>@Html.LabelFor(model => model.PurchasePrice)</label>
                                            @Html.TextBoxFor(model => model.PurchasePrice, new { @class = "form-control border-input", name = "PurchasePrice" })
                                            <div>@Html.ValidationMessageFor(model => model.PurchasePrice)</div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label>@Html.LabelFor(model => model.LeadTime)</label>
                                            @Html.TextBoxFor(model => model.LeadTime, new { @class = "form-control border-input", name = "LeadTime" })
                                            <div>@Html.ValidationMessageFor(model => model.LeadTime)</div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label>@Html.LabelFor(model => model.MfgDate)</label>
                                            @Html.TextBoxFor(model => model.MfgDate, new { @class = "form-control border-input", type = "date", name = "MfgDate" })
                                            <div>@Html.ValidationMessageFor(model => model.MfgDate)</div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label>@Html.LabelFor(model => model.ExpDate)</label>
                                            @Html.TextBoxFor(model => model.ExpDate, new { @class = "form-control border-input", type = "date", name = "ExpDate" })
                                            <div>@Html.ValidationMessageFor(model => model.ExpDate)</div>
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label>@Html.LabelFor(model => model.Unit_of_Measure)</label>
                                            @Html.TextBoxFor(model => model.Unit_of_Measure, new { @class = "form-control border-input", name = "UnitofMeasure" })
                                            <div>@Html.ValidationMessageFor(model => model.Unit_of_Measure)</div>
                                        </div>
                                    </div>
                                </div>
                                <hr/>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="text-center">
                                            <input type="submit" class="btn btn-info btn-fill btn-wd" value="Submit" />
                                        </div>
                                    </div>
                                </div>
                                <div class="clearfix"></div>
                            }
                       

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script src="~/Scripts/jquery-1.10.2.js"></script>
<script src="~/Scripts/jquery.validate.js"></script>
<script>
    $(document).ready(function () {
        
        $("#MyForm").validate({
            rules:{
                VendorID:{
                    required:true,
                    number: true,
                },
                CategoryID:{
                    required: true,
                    number: true,
                },
                ItemName:{
                    required:true,
                    lettersonly: true,
                },
                UnitPrice: {
                     required: true,
                     number: true,
                },
                PurcahsePrice: {
                    required: true,
                    number:true,
                },
                MfgDate: {
                    required: true,
                    date:true,
                },
                ExpDate: {
                    required: true,
                    date: true,
                },
                UnitofMeasure:{
                    required: true,
                    text: true,
                },
                LeadTime:{
                    required: true,
                    number: true,
                },
                  
            },
        });
    });
</script>