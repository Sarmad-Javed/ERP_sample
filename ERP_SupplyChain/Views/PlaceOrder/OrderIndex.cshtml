@model ERPEntities.Models.VendorItemView
@{
    Layout = "~/Views/Shared/_SCLayout.cshtml";
    ViewBag.Title = "Place Order";
}
<script src="~/Scripts/jquery-1.10.2.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/assets/js/moment.min.js"></script>
<div class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-12 col-md-12">
                <div class="card">
                    <div class="card-header card-header-info card-header-icon">
                        <div class="card-icon">
                            <i class="material-icons">assignment</i>
                        </div>
                        <h4 class="card-title">PlaceOrder</h4>
                    </div>
                    <div class="content">
                        <div class="row">
                            
                                <div class="col-lg-3">
                                    <div class="">
                                        @if (ViewBag.CategoryList != null)
                                        {   @Html.LabelFor(model => model.CategoryID)
                                            @Html.DropDownListFor(model => model.CategoryID, ViewBag.CategoryList as SelectList, "--Select Vendor--", new { @class = " form-control ", name = "SelectCategotry", id = "CategoryId" })
                                        }
                                        <span class="error" style=" visibility:hidden;"> Required field !</span>
                                    </div>
                                </div>
                                <div class="col-lg-3">
                                    <div class="">
                                        @if (ViewBag.VendorList != null)
                                        {   @Html.LabelFor(model => model.VendorID)
                                            @Html.DropDownListFor(model => model.VendorID, ViewBag.VendorList as SelectList, "--Select Vendor--", new { @class = " form-control ", name = "SelectVendor", id = "VendorId" })
                                            <span class="error" style=" visibility:hidden;"> Required field !</span>
                                        }

                                    </div>
                                </div>
                                <div class="col-lg-3">
                                    <div class="">
                                        @Html.LabelFor(model => model.ItemID)
                                        @Html.DropDownListFor(model => model.ItemID, new SelectList("--Select Item--"), "--Select Item--", new { @class = " form-control ", name = "SelectItem", id = "ItemId" })
                                        <span class="error" style=" visibility:hidden;"> Required field !</span>
                                    </div>
                                </div>
                                <div class="col-lg-3">
                                    <div class="">
                                        <label> Select Qty</label>
                                        <input type="number" id="Qty" name="Qty"  class="form-control" />
                                        <span class="error" id="Qtyerror" style=" visibility:hidden;"> Required field !</span>
                                    </div>
                                </div>
                              
                        </div>
                        
                        <div class="row">
                            <div class="col-lg-3"> 
                                <div class="">
                                        <label> Select date</label>
                                        <input type="text" id="Date" name="Qty" class="form-control datepicker" />
                                    <span class="error" id="Dateerror" style=" visibility:hidden;"> Required field !</span>
                                </div>
                                <div>
                                    <div class="text-center">
                                        <a href="#" class="btn btn-info btn-fill btn-wd" id="add">Add</a>
                                    </div>
                                </div>
                            </div>
                   
                            <div class="col-sm-1"></div>
                            @*Product item list*@
                            <div class="col-lg-8 col-md-8 s" id="ProductCart">
                                <div class="card ">
                                    <div class="card-header card-header-info">
                                        <h4 class="card-title">Items List</h4>
                                    </div>
                                    <div class="content">
                                        <div class="row">
                                            <div class="content table-responsive table-full-width " id="OrderList">

                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-lg-8"></div>
                                            <div class="col-lg-4 text-left">
                                                <label class="form-control"><b>Grand Total:</b><span id="Gtotal"></span></label>

                                            </div>

                                        </div>
                                        <div class="row">
                                            <div class="col-lg-6"></div>
                                            <div class="col-lg-3 text-left">
                                                <div class="text-center">
                                                    <br>
                                                    <a href="#" class="btn btn-info btn-fill btn-wd" id="submit">Place Order</a>
                                                </div>
                                            </div>
                                            <div class="col-lg-3 text-left">
                                                <div class="text-center">
                                                    <br>
                                                    <a href="/PlaceOrder/OrderIndex" class="btn btn-info btn-fill btn-wd" id="Cancel">Cancel</a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

    <script src="../../assets/js/moment.min.js"></script>
    <script src="../../assets/js/fullcalendar.min.js"></script>
    <script src="../../assets/js/sweetalert2.js"></script>
    <script src="../../assets/js/bootstrap-datetimepicker.js"></script>

<script>
    // datepicker
    $(document).ready(function () {
        initFormExtendedDatetimepickers();
        $('#dtp1,#dtp2').datetimepicker({
            format: 'MM/dd/yyyy HH:mm A'
        });
        function initFormExtendedDatetimepickers() {
            $('.datetimepicker').datetimepicker({
                format: 'MM/dd/yyyy HH:mm A',
                icons: {
                    time: "fa fa-clock-o",
                    date: "fa fa-calendar",
                    up: "fa fa-chevron-up",
                    down: "fa fa-chevron-down",
                    previous: 'fa fa-chevron-left',
                    next: 'fa fa-chevron-right',
                    today: 'fa fa-screenshot',
                    clear: 'fa fa-trash',
                    close: 'fa fa-remove'
                }

            });

            $('.datepicker').datetimepicker({
                format: 'MM/DD/YYYY',
                icons: {
                    time: "fa fa-clock-o",
                    date: "fa fa-calendar",
                    up: "fa fa-chevron-up",
                    down: "fa fa-chevron-down",
                    previous: 'fa fa-chevron-left',
                    next: 'fa fa-chevron-right',
                    today: 'fa fa-screenshot',
                    clear: 'fa fa-trash',
                    close: 'fa fa-remove'
                }
            });

            $('.timepicker').datetimepicker({
                //          format: 'H:mm',    // use this format if you want the 24hours timepicker
                format: 'h:mm A',    //use this format if you want the 12hours timpiecker with AM/PM toggle
                icons: {
                    time: "fa fa-clock-o",
                    date: "fa fa-calendar",
                    up: "fa fa-chevron-up",
                    down: "fa fa-chevron-down",
                    previous: 'fa fa-chevron-left',
                    next: 'fa fa-chevron-right',
                    today: 'fa fa-screenshot',
                    clear: 'fa fa-trash',
                    close: 'fa fa-remove'
                }
            });
        }
    })
    //Cascading DropdownList
    $(document).ready(function () {

        //intialization
        var orderItems = [];
        var orderDetails = [];
        var ItemId;
        var VendorId;
        var ItemName;
        var VendorName;
        var Category;
        var ExpiryDate;
        var Price;
        var Quantity;
        var StockQuantity;
        var OrderDate;
        var TotalAmount;
        var Grandtotal = 0;
        var Ordertotal = 0;
        //Get ItemList Cascading Dropdown
        $("#VendorId").on("change", function () {
            $.get("/PlaceOrder/GetItemList", { VendorId: $("#VendorId").val(), CategoryId: $("#CategoryId").val() }, function (data) {
                $("#ItemId").empty();
                $("#ItemId").append("<option value='#'>" + "Select Item" + "</option>");
                $.each(data, function (index, row) {
                    $("#ItemId").append("<option value='" + row.ItemID + "'>" + row.ItemName + "</option>");
                })
            })
        });

        //get item details
        $("#ItemId").on("change", function () {

            //get product id
            var e = document.getElementById("ItemId");
            ItemId = e.options[e.selectedIndex].value;

            //get item details
            $.get("/PlaceOrder/GetItemDetails", { id: ItemId }, function (data) {
                $.each(data, function (index, row) {
                    ItemId = row.ItemID;
                    ItemName = row.ItemName,
                    Price = row.PurchasePrice;
                    StockQuantity = row.Quantity;  
                })
            })
        });

        //add to Orderlist
        $('#add').on("click", function () {
            var isValidItem = true;
            if ($('#CategoryId').val().trim() == '') {
                isValidItem = false;
                $('#CategoryId').siblings('span.error').css('visibility', 'visible');
            }
            else {
                $('#CategoryId').siblings('span.error').css('visibility', 'hidden')
            }
            if ($('#VendorId').val().trim() == '') {
                isValidItem = false;
                $('#VendorId').siblings('span.error').css('visibility', 'visible');
            }
            else {
                $('#VendorId').siblings('span.error').css('visibility', 'hidden');
            }
            if ($('#ItemId').val().trim() == '') {
                isValidItem = false;
                $('#ItemId').siblings('span.error').css('visibility', 'visible');
            }
            else {
                $('#ItemId').siblings('span.error').css('visibility', 'hidden');
            }
            if ($('#Qty').val().trim() == '') {
                isValidItem = false;
                $('#Qtyerror').css('visibility', 'visible');
            }
            else {
                $('#Qtyerror').css('visibility', 'hidden');
            }

            if ($('#Date').val().trim() == '') {
                isValidItem = false;
                $('#Dateerror').css('visibility', 'visible');
            }
            else {
                $('#Dateerror').css('visibility', 'hidden');
            }

            if (isValidItem)
            {
                //initialization
                Quantity = parseInt($("#Qty").val());
                OrderDate = $("#Date").val();
                TotalAmount = parseFloat(Quantity * Price);

               

                //populate order items
                var e = document.getElementById("ItemId");
                var v = document.getElementById("VendorId");
                var c = document.getElementById("CategoryId");
                var Id = e.options[e.selectedIndex].value; 
                VendorId = v.options[v.selectedIndex].value;
                VendorName = v.options[v.selectedIndex].text;
                Category = c.options[c.selectedIndex].text;
                var itemExist = false;

                if (orderItems.length > 0) {
                    //check if item already exsist in list
                    $.each(orderItems, function (i, val) {
                        //if yes
                        if (orderItems[i].ItemId == Id) {
                            itemExist = true;
                        }
                    })
                }

                if (itemExist == true) {
                    $.each(orderItems, function (i, val) {
                        if (orderItems[i].ItemId == Id) {
                            val.Quantity = val.Quantity + Quantity;
                            val.Total = val.Quantity * Price;
                            //generate table
                            GeneratedItemsTable();
                        }
                    })
                }
                else {
                    orderItems.push({
                        ItemId: ItemId,
                        ItemName: ItemName,
                        VendorId: VendorId,
                        VendorName: VendorName,
                        Category: Category,
                        Quantity: Quantity,
                        Price: parseFloat(Price),
                        TotalAmount:parseFloat( TotalAmount),
                        
                    })
                    GeneratedItemsTable();   
                }    
            }
            
        });
        //Save order
        //Save button click function
        $('#submit').click(function () {
            
            //Save if valid
            if(orderItems.length > 0) 
            {
                var data = {
                    OrderDate: OrderDate,
                    OrderStatus: "Pending",
                    Payment: "isDue",
                    TotalAmount: Ordertotal,
                    OrderDetails: orderItems
                }

                $(this).val('Please wait...');

                $.ajax({
                    url: '/PlaceOrder/SaveOrder',
                    type: "POST",
                    data: JSON.stringify(data),
                    dataType: "JSON",
                    contentType: "application/json",
                    success: function (d) {
                        //check is successfully save to database 
                        if (d.status == true) {
                            //will send status from server side
                            alert('Successfully done.');
                            window.location.replace("/PendingOrder/Orders");
                            //clear form
                            orderItems = [];
                            $('#VendorId').val('');
                            $('#ItemId').val('');
                            $('#CategoryId').val('');
                            $('#DateId').val('');
                            $('#Qty').val('');
                            $('#orderItems').empty();
                        }
                        else {
                            alert('Failed');
                        }
                        $('#submit').val('Save');
                    },
                    error: function () {
                        alert('Error. Please try again.');
                        $('#submit').val('Save');
                    }
                });
            }
            else {
                alert("add item first");
            }
         });

        //generate table
        function GeneratedItemsTable() {
            if (orderItems.length > 0) {
                Grandtotal = 0;
                var $table = $('<table/>').addClass("table table-striped");
                $table.append('<thead><tr><th>Item</th><th>Quantity</th><th>Rate</th><th>Total</th><th></th></tr></thead>');
                var $tbody = $('<tbody/>');
                $.each(orderItems, function (i,val) {
                    var $row = $('<tr/>');
                    $row.append($('<td/>').html(val.ItemName));
                    $row.append($('<td/>').html(val.Quantity));
                    $row.append($('<td/>').html(val.Price));
                    $row.append($('<td/>').html(val.TotalAmount));
                    var $remove = $('<a href="#">Remove</a>');
                    $remove.click(function (e) {
                        e.preventDefault();
                        orderItems.splice(i, 1);
                        GeneratedItemsTable();
                    });
                    $row.append($('<td/>').html($remove));
                    $tbody.append($row);
                    Grandtotal = parseFloat(orderItems[i].TotalAmount + Grandtotal);
                    Ordertotal = Grandtotal;

                    $('#Gtotal').html(Grandtotal);
                });
                console.log("current", orderItems);
                $table.append($tbody);
                $('#OrderList').html($table);
                
            }
            else {
                $('#orderItems').html('');
            }
        }
        
    });

    $(document).ready(function () {
        
     

    });
 
</script>        
